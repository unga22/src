package Gravity;

import cpw.mods.fml.client.FMLClientHandler;
import cpw.mods.fml.common.*;
import cpw.mods.fml.common.event.*;
import cpw.mods.fml.common.eventhandler.EventBus;
import cpw.mods.fml.common.gameevent.TickEvent;
import cpw.mods.fml.common.registry.GameRegistry;
import grim3212.mc.core.block.GenericBlock;
import grim3212.mc.core.creative.CreativeTabGrimBlocks;
import grim3212.mc.core.creative.CreativeTabGrimItems;
import grim3212.mc.core.lib.Config;
import grim3212.mc.core.packet.PacketPipeline;
import grim3212.mc.core.util.VersionChecker;
import java.io.File;
import java.util.List;
import net.minecraft.block.Block;
import net.minecraft.block.material.Material;
import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.GuiIngame;
import net.minecraft.client.gui.GuiNewChat;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.util.ChatComponentText;

// Referenced classes of package grim3212.mc.core:
//            GrimModule

public class Grim3212Core extends GrimModule
{

    public Grim3212Core()
    {
    }

    public void load(FMLPreInitializationEvent event)
    {
        ModMetadata data = event.getModMetadata();
        data.autogenerated = false;
        data.version = "V0.2 - 1.7.2";
        data.name = "Grim3212 Core";
        data.description = "The core mod that all of grims mods require.";
        data.authorList.add("Grim3212");
        data.url = "http://grim3212.wikispaces.com/Grim3212+Core";
        data.credits = "Thanks to Grim3212 for the original mod.";
        data.logoFile = "assets/grim3212-logo-texture/grimLogo.png";
        Config.init(new File((new StringBuilder()).append(event.getModConfigurationDirectory().getAbsolutePath()).append(File.separator).append("/GrimsMods/").append(getModID()).append(".cfg").toString()));
        grimCoreItem = (new Item()).func_77655_b("grimCoreItem").func_111206_d((new StringBuilder()).append(getModID()).append(":itemCore").toString()).func_77637_a(tabsGrimItems);
        grimCoreBlock = (new GenericBlock(Material.field_151573_f)).func_149711_c(5F).func_149752_b(10F).func_149672_a(Block.field_149777_j).func_149663_c("grimBlockItem").func_149658_d((new StringBuilder()).append(getModID()).append(":blockCore").toString());
        GameRegistry.registerBlock(grimCoreBlock, "grimCoreBlock");
        GameRegistry.registerItem(grimCoreItem, "grimCoreItem", "grim3212core");
        GameRegistry.addRecipe(new ItemStack(grimCoreItem, 1), new Object[] {
            " G ", "IXI", " G ", Character.valueOf('X'), Items.field_151045_i, Character.valueOf('I'), Items.field_151042_j, Character.valueOf('G'), Items.field_151043_k
        });
        GameRegistry.addRecipe(new ItemStack(grimCoreItem, 1), new Object[] {
            " G ", "IXI", " G ", Character.valueOf('X'), Items.field_151045_i, Character.valueOf('I'), Items.field_151043_k, Character.valueOf('G'), Items.field_151042_j
        });
        GameRegistry.addRecipe(new ItemStack(grimCoreBlock, 1), new Object[] {
            " G ", "IXI", " G ", Character.valueOf('X'), Blocks.field_150484_ah, Character.valueOf('I'), Blocks.field_150339_S, Character.valueOf('G'), Blocks.field_150340_R
        });
        GameRegistry.addRecipe(new ItemStack(grimCoreBlock, 1), new Object[] {
            " G ", "IXI", " G ", Character.valueOf('X'), Blocks.field_150484_ah, Character.valueOf('I'), Blocks.field_150340_R, Character.valueOf('G'), Blocks.field_150339_S
        });
    }

    public void init(FMLInitializationEvent event)
    {
        FMLCommonHandler.instance().bus().register(this);
        doUpdateCheck = Config.allowVersionCheckGlobal;
        if(doUpdateCheck)
        {
            versionChecker = new VersionChecker("Grim3212 Core", "V0.2 - 1.7.2", versionUrl, "http://grim3212.wikispaces.com/Grim3212+Core");
            versionChecker.checkVersionWithLoggingBySubStringAsFloat(1, 4);
        }
        packetPipeline.initialise();
    }

    public void postInitialise(FMLPostInitializationEvent evt)
    {
        packetPipeline.postInitialise();
    }

    public String getModID()
    {
        return "grim3212core";
    }

    public void tick(cpw.mods.fml.common.gameevent.TickEvent.ClientTickEvent event)
    {
        if(FMLClientHandler.instance().getClient().field_71462_r == null && doUpdateCheck)
        {
            Grim3212Core _tmp = this;
            if(canVersionCheck && !versionChecker.isCurrentVersionBySubStringAsFloatNewer(1, 4))
            {
                String arr$[] = versionChecker.getInGameMessage();
                int len$ = arr$.length;
                for(int i$ = 0; i$ < len$; i$++)
                {
                    String msg = arr$[i$];
                    FMLClientHandler.instance().getClient().field_71456_v.func_146158_b().func_146227_a(new ChatComponentText(msg));
                }

                Grim3212Core _tmp1 = this;
                canVersionCheck = false;
            }
        }
    }

    public static Grim3212Core instance;
    public static CreativeTabs tabsGrimBlocks = new CreativeTabGrimBlocks(CreativeTabs.getNextID(), "grim3212core");
    public static CreativeTabs tabsGrimItems = new CreativeTabGrimItems(CreativeTabs.getNextID(), "grim3212core");
    public static boolean doUpdateCheck;
    private static VersionChecker versionChecker;
    public static boolean canVersionCheck = true;
    public static Item grimCoreItem;
    public static Block grimCoreBlock;
    public static final PacketPipeline packetPipeline = new PacketPipeline();

}
